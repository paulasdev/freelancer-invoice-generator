@using Microsoft.AspNetCore.Identity
@using SoloBill.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewData["Title"] - SoloBill</title>

    <!-- Bootstrap + Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />

    <!-- Custom CSS -->
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link href="https://fonts.googleapis.com/css2?family=Inter&display=swap" rel="stylesheet" />
</head>
<body>
    <!-- Top Navbar -->
    <header>
        <nav class="navbar navbar-expand-lg navbar-light bg-white shadow-sm">
            <div class="container">
                <a class="navbar-brand d-flex align-items-center" href="/">
                    <img src="~/images/solobill-logo.png" alt="SoloBill Logo" style="height: 40px;" class="me-2" />
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
                    <div class="d-flex align-items-center gap-3 py-3 py-lg-0">
                        @if (SignInManager.IsSignedIn(User))
                        {
                            <form method="post"
                                  asp-area="Identity"
                                  asp-page="/Account/Logout"
                                  asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })"
                                  class="d-inline">
                                <button type="submit" class="btn btn-outline-neutral rounded-pill px-4 py-2">
                                    Log out
                                </button>
                            </form>
                        }
                        else
                        {
                            <a href="/Identity/Account/Login" class="btn btn-outline-primary rounded-pill px-4 py-2">
                                Sign In
                            </a>
                            <a href="/Identity/Account/Register" class="btn btn-primary rounded-pill px-4 py-2">
                                Register
                            </a>
                        }
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <!-- Flash messages -->
<div class="container mt-3" id="flash-area">
    @if (TempData["ToastSuccess"] is string s && !string.IsNullOrWhiteSpace(s))
    {
        <div class="alert alert-success alert-dismissible fade show shadow-sm rounded-pill px-4" role="alert">
            <i class="bi bi-check-circle me-2"></i>@s
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ToastError"] is string e && !string.IsNullOrWhiteSpace(e))
    {
        <div class="alert alert-warning alert-dismissible fade show shadow-sm rounded-pill px-4" role="alert">
            <i class="bi bi-exclamation-triangle me-2"></i>@e
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
</div>

    <!-- Page Content -->
    <div class="container-fluid">
        <div class="row g-0">
            @if (User.Identity.IsAuthenticated)
            {
                <aside class="col-lg-2 sidebar border-end d-none d-lg-block">
                    <nav class="sb-nav d-flex flex-column h-100" aria-label="Primary">
                        <!-- Quick action -->
                        <div class="p-3">
                            <a href="/Invoices/Create" class="btn btn-purple w-100 rounded-pill">
                                <i class="bi bi-plus-lg me-1"></i> New invoice
                            </a>
                        </div>

                        <!-- Overview -->
                        <div class="px-3 mt-2 mb-1 text-uppercase small fw-semibold text-white-50">Overview</div>
                        <a class="sb-link d-flex align-items-center @(ViewContext.RouteData.Values["controller"]?.ToString()=="Dashboard" ? "active" : "")"
                           href="/Dashboard" aria-current="@(ViewContext.RouteData.Values["controller"]?.ToString()=="Dashboard" ? "page" : null)">
                            <svg class="sb-ico sb-ico-grid me-2" viewBox="0 0 24 24" aria-hidden="true" focusable="false">
                                <rect x="3"  y="3"  width="8" height="8" rx="2"></rect>
                                <rect x="13" y="3"  width="8" height="8" rx="2"></rect>
                                <rect x="3"  y="13" width="8" height="8" rx="2"></rect>
                                <rect x="13" y="13" width="8" height="8" rx="2"></rect>
                            </svg>
                            <span>Dashboard</span>
                        </a>

                        <!-- Work -->
                        <div class="px-3 mt-3 mb-1 text-uppercase small fw-semibold text-white-50">Work</div>
                        <a class="sb-link d-flex align-items-center @(ViewContext.RouteData.Values["controller"]?.ToString()=="Invoices" ? "active" : "")"
                           href="/Invoices" aria-current="@(ViewContext.RouteData.Values["controller"]?.ToString()=="Invoices" ? "page" : null)">
                            <i class="bi bi-file-earmark-text me-2"></i>
                            <span>Invoices</span>
                        </a>

                        <a class="sb-link d-flex align-items-center @(ViewContext.RouteData.Values["controller"]?.ToString()=="Clients" ? "active" : "")"
                           href="/Clients" aria-current="@(ViewContext.RouteData.Values["controller"]?.ToString()=="Clients" ? "page" : null)">
                            <i class="bi bi-people me-2"></i>
                            <span>Clients</span>
                        </a>

                        <!-- Account -->
                        <div class="px-3 mt-3 mb-1 text-uppercase small fw-semibold text-white-50">Account</div>
                        <a class="sb-link d-flex align-items-center @(ViewContext.RouteData.Values["controller"]?.ToString()=="ApplicationUser" ? "active" : "")"
                           href="/ApplicationUser/Settings" aria-current="@(ViewContext.RouteData.Values["controller"]?.ToString()=="ApplicationUser" ? "page" : null)">
                            <i class="bi bi-gear me-2"></i>
                            <span>Settings</span>
                        </a>

                        <div class="mt-auto p-3 small text-white-50">
                            <i class="bi bi-shield-lock me-1"></i> Secure by design
                        </div>
                    </nav>
                </aside>
            }

            <main class="@(User.Identity.IsAuthenticated ? "col-lg-10" : "col-12") pt-2 px-4 pb-4">
                @RenderBody()
            </main>
        </div>
    </div>

    <!-- Footer -->
    <footer class="bg-light py-4 text-center mt-auto">
        <div class="container">
            <p class="mb-0">&copy; @DateTime.Now.Year SoloBill. All rights reserved.</p>
        </div>
    </footer>

    @RenderSection("Scripts", required: false)
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

    <script>
  // Auto-dismiss alerts after 4s
  window.addEventListener('load', () => {
    const alerts = document.querySelectorAll('.alert');
    setTimeout(() => {
      alerts.forEach(a => {
        const bsAlert = bootstrap.Alert.getOrCreateInstance(a);
        bsAlert.close();
      });
    }, 4000);
  });
</script>
</body>
</html>