@model SoloBill.ViewModels.InvoiceViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-5">
    <div class="row justify-content-between">
        <!-- Left Form -->
        <div class="col-lg-5 mb-4">
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-white border-bottom-0">
                    <h4 class="mb-0 text-purple fw-bold">Create Invoice</h4>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="Invoice.InvoiceId" />

                        <div class="mb-3">
                            <label asp-for="Invoice.ClientId" class="form-label">Client</label>
                            <select asp-for="Invoice.ClientId"
                                    asp-items="ViewBag.ClientId"
                                    class="form-select"
                                    asp-option-label="-- Select a client --"></select>
                            <span asp-validation-for="Invoice.ClientId" class="text-danger"></span>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="Invoice.IssueDate" class="form-label">Issue Date</label>
                                <input asp-for="Invoice.IssueDate" class="form-control" type="date" />
                            </div>
                            <div class="col-md-6 mb-3">
                                <label asp-for="Invoice.DueDate" class="form-label">Due Date</label>
                                <input asp-for="Invoice.DueDate" class="form-control" type="date" />
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Notes" class="form-label">Notes</label>
                            <textarea asp-for="Notes"
                                      class="form-control"
                                      rows="3"
                                      placeholder="Optional: add a short note for your customer (e.g., “Thank you for your business!” or payment terms)."></textarea>
                            <span asp-validation-for="Notes" class="text-danger"></span>
                        </div>

                        <h5 class="text-muted mb-2">Invoice Items</h5>
                        <div id="invoice-items">
                            @for (int i = 0; i < Model.Items.Count; i++)
                            {
                                <div class="row border rounded p-3 mb-3 position-relative invoice-item">
                                    <div class="col-12 mb-2">
                                        <input type="text" name="Items[@i].Description" value="@Model.Items[i].Description" class="form-control" placeholder="Item description" />
                                    </div>
                                    <div class="col-6">
                                        <label class="form-label">Qty</label>
                                        <input type="number" name="Items[@i].Quantity" value="@Model.Items[i].Quantity" class="form-control" />
                                    </div>
                                    <div class="col-6">
                                        <label class="form-label">Rate</label>
                                        <input type="number" step="0.01" name="Items[@i].UnitPrice" value="@Model.Items[i].UnitPrice" class="form-control" />
                                    </div>
                                    <button type="button"
                                            class="btn-close position-absolute top-0 end-0 m-2"
                                            aria-label="Remove item"
                                            onclick="removeItem(this)"></button>
                                </div>
                            }
                        </div>

                        <button type="button" class="btn btn-outline-purple w-100 mb-3" onclick="addItem()">+ Add Item</button>
                        <button type="submit" class="btn btn-purple w-100">Save Invoice</button>
                    </form>
                </div>
            </div>
        </div>

        <!-- Right Preview -->
        <div class="col-lg-7" id="preview">
            <div class="card shadow-lg border-0">
                <div class="card-body bg-white p-3">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h3 class="fw-bold">INVOICE</h3>
                        <p class="mb-0">#@Model.Invoice.InvoiceNumber</p>
                        @if (!string.IsNullOrEmpty(Model.ApplicationUser?.LogoPath))
                        {
                            <img src="@Url.Content("~/uploads/" + Model.ApplicationUser.LogoPath + $"?v={DateTime.Now.Ticks}")"
                                 alt="Company Logo" style="max-height: 60px;" />
                        }
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <p class="mb-0">Date: <strong>@Model.Invoice.IssueDate.ToString("dd MMMM, yyyy")</strong></p>
                        </div>
                        <div class="col-md-6 text-md-end">
                            <p class="mb-0">Due Date: <strong>@Model.Invoice.DueDate.ToString("dd MMMM, yyyy")</strong></p>
                        </div>
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-6">
                            <p class="fw-bold mb-1">Bill From:</p>
                            <p class="mb-0">@Model.CompanyName</p>
                            <p class="mb-0">@Model.Address</p>
                            <p class="mb-0">@Model.CompanyPhone</p>
                            <p class="mb-0">@Model.Email</p>
                        </div>
                        <div class="col-md-6">
                            <p class="fw-bold mb-1">Bill To:</p>
                            <p class="mb-0">@Model.Client?.Company</p>
                            <p class="mb-0">@Model.Client?.Address</p>
                            <p class="mb-0">@Model.Client?.Email</p>
                        </div>
                    </div>

                    <table class="table table-sm">
                        <thead class="table-light">
                            <tr>
                                <th>Description</th>
                                <th>Qty</th>
                                <th>Rate</th>
                                <th>Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Items)
                            {
                                <tr>
                                    <td>@item.Description</td>
                                    <td>@item.Quantity</td>
                                    <td>@("\u20ac" + item.UnitPrice.ToString("N2"))</td>
                                    <td>@("\u20ac" + item.Total.ToString("N2"))</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <p class="text-end fw-bold">Total: €@Model.Items.Sum(i => i.Quantity * i.UnitPrice).ToString("N2")</p>

                    <div class="bg-light p-3 rounded mt-4">
                        <p class="fw-bold mb-1">Payment Method</p>
                        <p class="mb-1">Bank: @Model.BankName</p>
                        <p class="mb-1">IBAN: @Model.IBAN</p>
                        <p class="mb-1">BIC: @Model.BIC</p>

                        <div id="preview-note-wrapper" style="@(string.IsNullOrEmpty(Model.Notes) ? "display:none" : "")">
                            <p class="mb-1"><strong>Note:</strong> <span id="preview-note-text">@Model.Notes</span></p>
                        </div>
                    </div>

                    <div class="mt-4 d-flex justify-content-end gap-3">
                        @if (Model.Invoice.InvoiceId > 0)
                        {
                            <a asp-action="ExportToPdf"
                               asp-controller="Invoices"
                               asp-route-id="@Model.Invoice.InvoiceId"
                               class="btn btn-outline-primary">
                                <i class="bi bi-download"></i> Download PDF
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function addItem() {
            const container = document.getElementById('invoice-items');
            const index = container.querySelectorAll('.invoice-item').length;

            const item = document.createElement('div');
            item.className = 'row border rounded p-3 mb-3 position-relative invoice-item';
            item.innerHTML = `
                <div class="col-12 mb-2">
                    <input type="text" name="Items[${index}].Description" class="form-control" placeholder="Item description" />
                </div>
                <div class="col-6">
                    <label class="form-label">Qty</label>
                    <input type="number" name="Items[${index}].Quantity" class="form-control" />
                </div>
                <div class="col-6">
                    <label class="form-label">Rate</label>
                    <input type="number" step="0.01" name="Items[${index}].UnitPrice" class="form-control" />
                </div>
                <button type="button"
                        class="btn-close position-absolute top-0 end-0 m-2"
                        aria-label="Remove item"
                        onclick="removeItem(this)"></button>
            `;
            container.appendChild(item);
        }

        function removeItem(button) {
            const row = button.closest('.invoice-item') || button.closest('.row');
            if (row) row.remove();
        }

        // Live update Notes preview
        document.addEventListener('input', (e) => {
            if (e.target && e.target.name === 'Notes') {
                const val = e.target.value.trim();
                const wrapper = document.getElementById('preview-note-wrapper');
                const text = document.getElementById('preview-note-text');

                if (!wrapper || !text) return;

                if (val) {
                    text.textContent = val;
                    wrapper.style.display = '';
                } else {
                    text.textContent = '';
                    wrapper.style.display = 'none';
                }
            }
        });
    </script>
}